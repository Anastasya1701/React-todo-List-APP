{"version":3,"sources":["components/AppHeader/index.js","components/SearchPanel/index.js","components/TodoListItem/index.js","components/TodoList/index.js","components/itemStatusFilter/index.js","components/ItemAddForm/index.js","App.js","index.js"],"names":["AppHeader","toDo","done","className","SerachPanel","state","term","onChange","e","target","value","setState","props","onSearchCange","type","placeholder","this","React","Component","TodoListItem","label","onDeleted","important","onToggleDone","onToggleImportant","onClick","TodoList","todoData","elements","map","element","id","itemsProps","key","ItemStatusFilter","buttonsArr","name","filterButton","filter","buttons","ItemAddForm","onSubmit","preventDefault","onItemAded","App","maxId","createTodoItem","deleteItem","idx","findIndex","el","newState","slice","console","log","addItem","text","newItem","togglePropperty","arr","propertyName","length","toLowerCase","indexOf","doneCount","todoCount","visibleItems","search","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bce576ab.chunk.js","sourcesContent":["import React from 'react'\r\nimport './appHeader.css'\r\n\r\n\r\nconst AppHeader = ({ toDo, done }) => {\r\n    return (\r\n        <div className=\"app-header d-flex\">\r\n            <h1>My Todo List</h1>\r\n            <h2>{toDo} more to do, {done} done</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppHeader","import React from 'react'\r\n\r\nexport default class SerachPanel extends React.Component {\r\n\r\n    state = {\r\n        term: ''\r\n    }\r\n\r\n    onChange = (e) => {\r\n        const term = e.target.value\r\n        this.setState({ term })\r\n        this.props.onSearchCange(term)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <input type=\"text\"\r\n                className=\"form-control search-input\"\r\n                placeholder=\"type to search\"\r\n                onChange={this.onChange}\r\n                value={this.state.term}\r\n            />\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport './todoListItem.css'\r\n\r\nexport default class TodoListItem extends React.Component {\r\n\r\n\r\n    render() {\r\n        const { label, onDeleted, done, important, onToggleDone, onToggleImportant } = this.props;\r\n\r\n        return (\r\n            <span className={done ? \"todo-list-item done\" : \"todo-list-item\"} >\r\n                <span\r\n                    className={!done && important ? \"todo-list-item-label important\" : \"todo-list-item-label\"}\r\n                    onClick={onToggleDone}>\r\n                    {label}\r\n                </span>\r\n                <button type=\"button\"\r\n                    className=\"btn btn-outline-success btn-sm float-right\"\r\n                    onClick={onToggleImportant}>\r\n                    <i className=\"fa fa-exclamation\" />\r\n                </button>\r\n                <button type=\"button\"\r\n                    className=\"btn btn-outline-danger btn-sm float-right\">\r\n                    <i\r\n                        className=\"fa fa-trash-o\"\r\n                        onClick={onDeleted} />\r\n                </button>\r\n            </span>\r\n        )\r\n    }\r\n\r\n}\r\n","import React from 'react'\r\nimport TodoListItem from '../TodoListItem'\r\nimport './style.css'\r\n\r\n\r\nconst TodoList = ({ todoData, onDeleted, onToggleDone, onToggleImportant }) => {\r\n\r\n    const elements = todoData.map((element) => {\r\n\r\n        const { id, ...itemsProps } = element // all, exept id\r\n\r\n        return (\r\n            <li className={\"list-group-item\"}\r\n                key={element.id}>\r\n                <TodoListItem\r\n                    {...itemsProps}\r\n                    onDeleted={() => onDeleted(id)}\r\n                    onToggleDone={() => onToggleDone(id)}\r\n                    onToggleImportant={() => onToggleImportant(id)}\r\n                />\r\n            </li>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <ul className={'list-group todo-list'}>\r\n            {elements}\r\n        </ul>\r\n    )\r\n}\r\nexport default TodoList","import React from 'react'\r\n\r\nexport default class ItemStatusFilter extends React.Component {\r\n    buttonsArr = [\r\n        { name: 'all', label: 'All' },\r\n        { name: 'done', label: 'Done' },\r\n        { name: 'active', label: 'Active' }\r\n    ]\r\n\r\n    render() {\r\n        const { filterButton, filter } = this.props\r\n\r\n        const buttons = this.buttonsArr.map(({ name, label }) => {\r\n            return <button\r\n                type=\"button\"\r\n                className={name === filter ? \"btn btn-info\" : \"btn btn-outline-secondary\"}\r\n                key={name}\r\n                onClick={() => filterButton(name)\r\n                }\r\n            >\r\n                {label}\r\n            </button >\r\n        })\r\n\r\n        return (\r\n            <div className=\"btn-group\">\r\n                {buttons}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport './style.css'\r\n\r\nexport default class ItemAddForm extends React.Component {\r\n\r\n    state = {\r\n        label: '',\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            label: e.target.value,\r\n        })\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onItemAded(this.state.label)\r\n        this.setState({\r\n            label: '',\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form\r\n                className='item-add-form d-flex'\r\n                onSubmit={this.onSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder='What needs to be done'\r\n                    className='form-control'\r\n                    onChange={this.onChange}\r\n                    value={this.state.label} />\r\n                <button\r\n                    className='btn btn-outline-secondary'\r\n                >\r\n                    Add Item\r\n                </button>\r\n            </form>\r\n        )\r\n    }\r\n}","import React from 'react'\nimport AppHeader from './components/AppHeader'\nimport SearchPanel from './components/SearchPanel'\nimport TodoList from './components/TodoList'\nimport ItemStatusFilter from './components/itemStatusFilter'\nimport ItemAddForm from './components/ItemAddForm'\n\n\nexport default class App extends React.Component {\n\n  maxId = 100;\n\n  state = {\n    todoData: [\n      this.createTodoItem('Drink Coffee'),\n      this.createTodoItem('Make Awesome App'),\n      this.createTodoItem('Have a lunch'),\n    ],\n    term: '',\n    filter: 'all' // done, active\n  }\n\n  createTodoItem(label) {\n    return {\n      label: label,\n      important: false,\n      id: this.maxId++,\n      done: false\n    }\n  }\n\n  deleteItem = (id) => {\n    this.setState(({ todoData }) => {\n      const idx = todoData.findIndex((el) => el.id === id);\n\n      // Main rule! you should not change current state, you should return new updated state\n      const newState = [\n        ...todoData.slice(0, idx),\n        ...todoData.slice(idx + 1)\n      ]\n      console.log(newState);\n\n\n      return {\n        todoData: newState,\n      }\n    })\n  }\n\n  addItem = (text) => {\n    const newItem = this.createTodoItem(text);\n\n    this.setState(({ todoData }) => {\n      const newArr = [\n        ...todoData,\n        newItem\n      ]\n      return {\n        todoData: newArr,\n      }\n    })\n  }\n\n  togglePropperty(arr, id, propertyName) {\n    // find right element index \n    const idx = arr.findIndex((el) => el.id === id)\n    // change done value in this element\n    const newItem = { ...arr[idx], [propertyName]: !arr[idx][propertyName] }\n    // return new state\n    return [\n      ...arr.slice(0, idx),\n      newItem,\n      ...arr.slice(idx + 1)\n    ]\n  }\n\n  onToggleDone = (id) => {\n\n    this.setState(({ todoData }) => {\n      return {\n        todoData: this.togglePropperty(todoData, id, 'done')\n      }\n    })\n\n  }\n\n  onToggleImportant = (id) => {\n\n    this.setState(({ todoData }) => {\n      return {\n        todoData: this.togglePropperty(todoData, id, 'important')\n      }\n    })\n\n  }\n\n  filter(arr, filter) {\n    switch (filter) {\n      case 'all':\n        return arr;\n      case 'done':\n        return arr.filter(el => el.done);\n      case 'active':\n        return arr.filter(el => !el.done);\n      default:\n        return arr;\n    }\n  }\n\n  onSearchCange = (term) => {\n    this.setState({ term })\n  }\n\n  filterButton = (filter) => {\n    this.setState({ filter })\n  }\n\n  search(arr, term) {\n    if (term.length === 0) {\n      return arr\n    }\n    return arr.filter(el => {\n      return el.label.toLowerCase().indexOf(term.toLowerCase()) > -1\n    })\n  }\n\n  render() {\n    const { todoData, term, filter } = this.state\n\n    const doneCount = todoData.filter(el => el.done).length;\n    const todoCount = todoData.length - doneCount\n\n    const visibleItems = this.filter(this.search(todoData, term), filter)\n\n    return (\n      <div className=\"todo-app\">\n        <AppHeader toDo={todoCount} done={doneCount} />\n        <div className=\"top-panel d-flex\">\n          <SearchPanel onSearchCange={this.onSearchCange} />\n          <ItemStatusFilter\n            filterButton={this.filterButton}\n            filter={filter} />\n        </div>\n\n        <TodoList\n          todoData={visibleItems}\n          onDeleted={this.deleteItem}\n          onToggleDone={this.onToggleDone}\n          onToggleImportant={this.onToggleImportant}\n        />\n        <ItemAddForm onItemAded={(text) => this.addItem(text)} />\n      </div>\n    )\n  }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}